{"version":3,"sources":["images/logo.png","components/SearchForm/SearchForm.tsx","components/CharacterItem/CharacterItem.tsx","components/CharacterList/CharacterList.tsx","components/CharacterPage/CharacterPage.tsx","images/portal.gif","components/StartPage/StartPage.tsx","components/App/App.tsx","index.tsx"],"names":["SearchForm","characters","setCheckedCharacter","setReturnCharacter","React","useState","value","setValue","className","onChange","evt","currentTarget","choseCharacter","map","item","name","id","onClick","inputName","find","console","log","findByName","type","CharacterItem","character","hoverImage","setHoverImage","onMouseEnter","onMouseLeave","src","image","alt","CharacterList","CharacterPage","returnCharacter","characterItem","setCharacterItem","a","axios","get","response","data","useEffect","getCharacter","species","StartPage","setStartPage","imageAnimation","setImageAnimation","history","useHistory","setTimeout","push","portal","App","startPage","hoverLogo","setHoverLogo","vhsOn","setVhsOn","setCharacters","selectedCharacter","setSelectedCharacter","checkedCharacter","location","useLocation","getList","results","pathname","fetchCharacters","vhsAnimation","window","setInterval","onMouseOut","logo","exact","path","to","valueOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cca8300e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e5d5c523.png\";","import React, {FormEvent, FunctionComponent, MouseEventHandler} from 'react';\nimport {ICharacter} from \"../../types/types\";\n\nimport './SearchForm.scss';\n\ninterface SearchFormProps {\n    characters: ICharacter[],\n    selectedCharacter: object,\n    setSelectedCharacter: React.Dispatch<React.SetStateAction<object>>,\n    setReturnCharacter: React.Dispatch<React.SetStateAction<number>>,\n    setCheckedCharacter: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nconst SearchForm: FunctionComponent<SearchFormProps> = (\n    {characters, setCheckedCharacter, setReturnCharacter}\n) => {\n    const [value, setValue] = React.useState('');\n\n    const choseCharacter = ((evt: FormEvent<HTMLSelectElement>) => {\n        setValue(evt.currentTarget.value);\n    });\n\n    const findByName = (inputName: string): void => {\n        const id = characters.find(item => item.name === inputName);\n        console.log(id);\n        if (id) {\n            setReturnCharacter(id.id);\n            setCheckedCharacter(true);\n        }\n    }\n\n    return (\n        <div className='search-form'>\n            <form className='search-form__form'>\n                <select\n                    className='search-from__select'\n                    aria-placeholder='chose character!'\n                    onChange={(evt) => choseCharacter(evt)}\n                >\n                    <option>Select person...</option>\n                    {characters.map(item =>\n                        <option key={item.id}>\n                            {item.name}\n                        </option>)}\n                </select>\n\n                <button className='search-form__button' onClick={() => findByName(value)} type='button'>\n                    Search\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default SearchForm;\n","import React, {FunctionComponent, MouseEventHandler} from 'react';\nimport {ICharacter} from \"../../types/types\";\n\nimport './CharacterItem.scss';\n\ninterface CharacterItemProps {\n    character: ICharacter;\n}\n\nconst CharacterItem: FunctionComponent<CharacterItemProps> = ({character}) => {\n    const [hoverImage, setHoverImage] = React.useState(false);\n\n    return (\n        <article className='character' key={character.id}>\n            <img\n                onMouseEnter={() => setHoverImage(true)}\n                onMouseLeave={() => setHoverImage(false)}\n                className={hoverImage ? 'character__image character__image_hover' : 'character__image'}\n                src={character.image}\n                alt={character.name}\n            />\n            <h3\n                onMouseEnter={() => setHoverImage(true)}\n                onMouseLeave={() => setHoverImage(false)}\n                className='character__title'\n            >\n                {character.name}\n            </h3>\n        </article>\n    );\n};\n\nexport default CharacterItem;\n","import React, {FunctionComponent} from 'react';\nimport {ICharacter} from \"../../types/types\";\n\nimport './CharacterList.scss';\n\nimport CharacterItem from \"../CharacterItem/CharacterItem\";\n\ninterface CharacterListProps {\n    characters: ICharacter[];\n}\n\nconst CharacterList:FunctionComponent<CharacterListProps> = ({characters}) => {\n    return (\n        <section className='character-list'>\n            {characters.map(item =>\n                <CharacterItem key={item.id} character={item}/>\n            )}\n        </section>\n    );\n};\n\nexport default CharacterList;\n","import React, {FunctionComponent} from 'react';\nimport axios from \"axios\";\nimport {ICharacter} from \"../../types/types\";\nimport {useHistory} from \"react-router-dom\";\n\ninterface CharacterPageProps {\n    returnCharacter: number\n}\n\nconst CharacterPage: FunctionComponent<CharacterPageProps> = ({returnCharacter}) => {\n    const [characterItem, setCharacterItem] = React.useState<ICharacter>();\n\n    React.useEffect(() => {\n        getCharacter(returnCharacter);\n    }, []);\n\n    async function getCharacter(id: number) {\n        try {\n            const response = await axios.get(`https://rickandmortyapi.com/api/character/${id}`)\n\n            const item = response.data;\n            setCharacterItem(item);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <section className='character-page'>\n            <div key={characterItem?.id} className='character-page__item'>\n                <h2>{characterItem?.name}</h2>\n                <img src={characterItem?.image} alt={characterItem?.name}/>\n                <p>{characterItem?.species}</p>\n            </div>\n        </section>\n    );\n};\n\nexport default CharacterPage;\n","export default __webpack_public_path__ + \"static/media/portal.09620ccf.gif\";","import React, {FunctionComponent} from 'react';\nimport {useHistory} from \"react-router-dom\";\n\nimport './StartPage.scss';\nimport portal from '../../images/portal.gif';\n\ninterface StartPageProps {\n    setStartPage: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nconst StartPage:FunctionComponent<StartPageProps> = ({setStartPage}) => {\n    const [imageAnimation, setImageAnimation] = React.useState(false);\n    const history = useHistory();\n\n    const handlePushPage = () => {\n        setImageAnimation(true);\n        setTimeout(() => {\n            history.push('/main');\n            setStartPage(false);\n        }, 2000);\n    }\n\n    return (\n        <section className='start-page'>\n            <img\n                onClick={handlePushPage}\n                className={imageAnimation ? 'start-page__portal start-page__portal-animation' : 'start-page__portal'}\n                alt='Go!'\n                src={portal}/>\n        </section>\n    );\n};\n\nexport default StartPage;\n","import React, {FunctionComponent} from 'react';\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Route, Redirect, Switch} from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport './App.scss';\nimport logo from '../../images/logo.png';\n\nimport SearchForm from '../SearchForm/SearchForm';\nimport CharacterList from \"../CharacterList/CharacterList\";\nimport {ICharacter} from \"../../types/types\";\nimport CharacterPage from \"../CharacterPage/CharacterPage\";\nimport StartPage from \"../StartPage/StartPage\";\n\nconst App: FunctionComponent = () => {\n    const [startPage, setStartPage] = React.useState(true);\n    const [hoverLogo, setHoverLogo] = React.useState(false);\n    const [vhsOn, setVhsOn] = React.useState(false);\n\n    const [characters, setCharacters] = React.useState<ICharacter[]>([]);\n    const [selectedCharacter, setSelectedCharacter] = React.useState<object>({});\n    const [returnCharacter, setReturnCharacter] = React.useState<number>(1);\n    const [checkedCharacter, setCheckedCharacter] = React.useState(false);\n\n    const location = useLocation();\n\n    //\n    React.useEffect(() => {\n        if (location.pathname === 'https://skkomolkina.github.io/typescript-rick-morty/') {\n            setStartPage(true)\n        } else if (location.pathname !== 'https://skkomolkina.github.io/typescript-rick-morty/') {\n            setStartPage(false);\n        }\n        console.log(location);\n    }, [location]);\n\n    React.useEffect(() => {\n        fetchCharacters();\n    }, []);\n\n    //\n    async function fetchCharacters() {\n        try {\n            const response = await axios.get('https://rickandmortyapi.com/api/character')\n            let getList = response.data.results;\n            console.log(getList)\n            setCharacters(getList);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    React.useEffect(() => {\n        vhsAnimation();\n    }, []);\n\n    const vhsAnimation = () => {\n        window.setInterval(() => {\n            setVhsOn(true);\n        }, 3500);\n        window.setInterval(() => {\n            setVhsOn(false);\n        }, 2000);\n    }\n\n    //\n    return (\n        <main className='application'>\n\n            <div className={startPage ? 'application__wrapper_start' :\n                'application__wrapper'}>\n\n                {startPage ? '' : (<div className={vhsOn ? 'application__vhs' : ''}/>)}\n\n                {startPage ? null :\n                    (<img\n                        onMouseEnter={() => setHoverLogo(true)}\n                        onMouseOut={() => setHoverLogo(false)}\n                        src={logo} alt={logo}\n                        className={hoverLogo ? 'application__logo application__logo_hover' :\n                            'application__logo'}\n                    />)}\n\n                <Switch>\n                    <Route exact path='https://skkomolkina.github.io/typescript-rick-morty/'>\n                        <StartPage setStartPage={setStartPage}/>\n                    </Route>\n\n                    <Route path='/main'>\n                        <SearchForm\n                            characters={characters}\n\n                            selectedCharacter={selectedCharacter}\n                            setSelectedCharacter={setSelectedCharacter}\n                            setReturnCharacter={setReturnCharacter}\n\n                            setCheckedCharacter={setCheckedCharacter}\n                        />\n\n                        <CharacterList characters={characters}/>\n\n                        {checkedCharacter ? <Redirect to={`/character/${returnCharacter.valueOf()}`}/> :\n                            null}\n                    </Route>\n\n                    <Route path={`/character/${returnCharacter.valueOf()}`}>\n                        <CharacterPage returnCharacter={returnCharacter}/>\n                    </Route>\n\n                    <Route path='*'>\n                        <Redirect to='https://skkomolkina.github.io/typescript-rick-morty/'/>\n                    </Route>\n                </Switch>\n\n            </div>\n\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}